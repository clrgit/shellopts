#!/usr/bin/env ruby

$LOAD_PATH.unshift "#{Dir.getwd}/lib"

#require 'shellopts'

require 'forward_to'
include ForwardTo

require 'constrain'
include Constrain

require './lib/shellopts/ext/case.rb'

require './lib/shellopts.rb'
require './lib/shellopts/ext/array.rb'
require './lib/shellopts/line.rb'
require './lib/shellopts/token.rb'
require './lib/shellopts/spec.rb'
require './lib/shellopts/grammar.rb'
require './lib/shellopts/doc.rb'
require './lib/shellopts/lexer.rb'
require './lib/shellopts/parser.rb'

#include ShellOpts::Message
#include ShellOpts::Verbose
#include ShellOpts::Debug

#include ShellOpts::Messages
#p ShellOpts::Messages.is_included?

SPEC = %(
  @ An initial brief

  -- AN ARG DESCR

  A 
  multiline
  description

  -a @brief option description
  -b 
    A description of the -a and -b option
    bla.bla.bla
    @a brief for both options
)
# command! -- CMDARG1 CMDARG2 @brief description of command
#   A command
#
#   -c
#     @brief description of the command option
#     An option for the command
#
# another_command!
#   -d
#     @ option -d brief
#     Option -d description
#   -- ARGS HERE
#   @ brief here
#   Description here
#)

lexer = ShellOpts::Lexer.new("main", SPEC)
tokens = lexer.lex
pp tokens
puts
parser = ShellOpts::Parser.new(tokens)
parser.parse
puts
parser.program.dump



exit


opts, args = ShellOpts.process(SPEC, ARGV, version: "--ver", version_number: "1.2.3", help: "-?,help")

verb "Verbose default"
(0..3).each { |i| verb i, "Verbose #{i}" }
mesg "Message"
notice "Notice"
#debug "Debug"


